



    1. 工厂接口只有一个创建产品的方法
    2. 用（不同）具体的类去实现工厂接口，重写创建产品的方法
    3. 创建不同的实体产品类，对应不同的工厂
    3. 在产品抽象类声明产品制作流程（模板方法设计模式）



    好处：扩展变得简单，让继承变得可行，增加了多态性的体现。

    缺点：每要生产一个新的产品就要去实现一个对应的工厂类，增加类的数量和系统复杂度



    应用场景：在创建商品时，客户端不断不需要操作具体的产品，只需要拿到生产该产品的工厂，需要造什么样的产品即可

    // 拿到生产该产品的工厂
    Factory factoryApple = new ProductFactoryApple();
    // 造什么样的产品
    Product productA = factoryApple.createProduct("沙拉");