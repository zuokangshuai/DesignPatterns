

Facade模式  （门面模式 | 外观模式）

    角色：
    1. 子系统角色：实现子系统的功能，内部之间可以相互调用，可会提供给外界进行调用；
    2. 门面角色： 被客户角色调用，熟悉子系统的功能，内部根据客户角色的需求预定了几种功能的组合。
    3. 客户角色:通过调用门面角色来完成要实现的功能。


《一》外观（Facade）模式是“迪米特法则”的典型应用，它有以下主要优点。
     降低了子系统与客户端之间的耦合度，使得子系统的变化不会影响调用它的客户类。
     对客户屏蔽了子系统组件，减少了客户处理的对象数目，并使得子系统使用起来更加容易。
     降低了大型软件系统中的编译依赖性，简化了系统在不同平台之间的移植过程，因为编译一个子系统不会影响其他的子系统，也不会影响外观对象。

《二》外观（Facade）模式的主要缺点：
     不能很好地限制客户使用子系统类。
     增加新的子系统可能需要修改外观类或客户端的源代码，违背了“开闭原则”。